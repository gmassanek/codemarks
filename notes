Link.load(:id)

or

Link.load(:url)

or

link = Link.new
link.url = 
link.load

Codemark -> CodemarkRecord -> postgres
         -> Link
            -> CachedLink -> postgres
            -> LiveLink
               -> www
            -> Tagger (not Taggable here, need to change)
              -> Topic -> postgres
         -> FindTags -> postgred
         -> User
            -> Authentication

3-22

Resource should be named 
  - origin
  - source
  - data/information
  - womb

Codemark
  # load(type/source, {:id, :url, :user})

      if load_requested_codemark(:id)
        load_attributes_from_db
      else
        load_link(:url)
        if look_for_codemark_by_user
          load_attributes_from_codemark

      CouldNotCreateLink unless @link

  #load_attributes_from_db
    @link = @codemark_record.link
    @tags = @codemark_record.tags
    @user = @codemark_record.user

  # tags
    return @tags
    link.tags { should have eager loaded it's existing codemark's tags?  }

  # title
    return @title
    link.title

  # user
    return @user
    load_user

    private
    load_requested_codemark(id)
      CodemarkRecord.find(id) (eager load link, tags, user)

    load_link(url)
      Link.load(url)
    
    look_for_codemark_by_user
      CodemarkRecord.find(user, link)

    load_user
      User.find(user_id)

3-23

Codemark
  # save(attributes, tag_ids, :new_topics, :user_id, :email)
    // attributes should have :link_id, 
    codemark = Codemark.load(attributes)
    tag_ids << handle_new_topics
                 normalize
                 match with existing?
                 create
    codemark.tag_ids = tag_ids
    codemark.user = look_for_user { incoming user_id? email? twitter handle?}
    save_codemark_record
